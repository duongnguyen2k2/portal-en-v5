@using Microsoft.AspNetCore.Http;
@using Newtonsoft.Json;
@using API.Areas.Admin.Models.DMCoQuan;
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    int IdCoQuan = int.Parse(Context.Session.GetString("DomainId").ToString());
    int ParentId = int.Parse(Context.Session.GetString("ParentId").ToString());
    string DomainFolderUpload = Context.Session.GetString("DomainFolderUpload").ToString();
    string ControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string ActionName = this.ViewContext.RouteData.Values["action"].ToString();
    DMCoQuan ItemCoQuan = JsonConvert.DeserializeObject<DMCoQuan>(Context.Session.GetString("ThongTinCoQuan"));
    var ItemConfig = API.Areas.Admin.Models.SYSParams.SYSParamsService.GetItemConfigByHome(ItemCoQuan,Context);

    List<SelectListItem> listLink = new List<SelectListItem>();//API.Areas.Admin.Models.Banners.BannersService.GetListItemsByCat(2, IdCoQuan);
    listLink.Add(new SelectListItem() { Value = "", Text = "--- Liên kết web ---" });

    List<API.Areas.Admin.Models.Videos.Videos> ListItemVideos = API.Areas.Admin.Models.Videos.VideosService.GetListFeatured(IdCoQuan);

    List<API.Areas.Admin.Models.Articles.Articles> NotificationList = API.Areas.Admin.Models.Articles.ArticlesService.GetListNotification(IdCoQuan);

    // ************* ListBanners **************
    string KeySessionBanners = "Banners_" + IdCoQuan.ToString() + "-" + ParentId.ToString() + DateTime.Now.ToString("yyyyMMddhh");
    string StrListBanners = Context.Session.GetString(KeySessionBanners);

    List<API.Areas.Admin.Models.Banners.Banners> ListBanners = new List<API.Areas.Admin.Models.Banners.Banners>();

    

    if(StrListBanners!=null && StrListBanners != "" && ItemCoQuan.MetadataCV.FlagSession==1)
    {
        ListBanners = JsonConvert.DeserializeObject<List<API.Areas.Admin.Models.Banners.Banners>>(StrListBanners);
    }
    else
    {
        ListBanners = API.Areas.Admin.Models.Banners.BannersService.GetList(IdCoQuan, ParentId, DomainFolderUpload);

        if (ItemCoQuan.MetadataCV.FlagSession == 1)
        {
            Context.Session.SetString(KeySessionBanners,JsonConvert.SerializeObject(ListBanners));
        }
        else
        {
            Context.Session.Remove(KeySessionBanners);
        }

    }

    // ************* End ListBanners **************

    List<SelectListItem> ListWebXa = new List<SelectListItem>();
    ListWebXa.Add(new SelectListItem() { Value = "", Text = "DANH SÁCH WEBSITE CẤP XÃ" });

    if (ListBanners != null && ListBanners.Count() > 0) {
        for(int bn = 0;bn<ListBanners.Count();bn++)
        {
            if (ListBanners[bn].CatId == 11) {
                ListWebXa.Add(new SelectListItem() { Value = ListBanners[bn].Link, Text = ListBanners[bn].Title });
            }

            if (ListBanners[bn].CatId == 2)
            {
                listLink.Add(new SelectListItem() { Value = ListBanners[bn].Link, Text = ListBanners[bn].Title });
            }
        }
    }

    
    // ************* Menu Dọc **************
    string KeySessionMenuDoc = "MenuDoc_" + IdCoQuan.ToString() + "-" + ParentId.ToString() + DateTime.Now.ToString("yyyyMMddhh");
    string StrListMenuDoc = Context.Session.GetString(KeySessionMenuDoc);
    List<API.Areas.Admin.Models.Menus.Menus> ListMenuDoc = new List<API.Areas.Admin.Models.Menus.Menus>();

    if(StrListMenuDoc!=null && StrListMenuDoc != "" && ItemCoQuan.MetadataCV.FlagSession==1)
    {
        ListMenuDoc = JsonConvert.DeserializeObject<List<API.Areas.Admin.Models.Menus.Menus>>(StrListMenuDoc);
    }
    else
    {
        ListMenuDoc = API.Areas.Admin.Models.Menus.MenusService.GetListByParrent(0, IdCoQuan, 1, ParentId);
        if (ItemCoQuan.MetadataCV.FlagSession == 1)
        {
            Context.Session.SetString(KeySessionMenuDoc,JsonConvert.SerializeObject(ListMenuDoc));
        }
        else
        {
            Context.Session.Remove(KeySessionMenuDoc);
        }

    }
    // ************* End Menu Dọc **************

    string linkCss = "/Templates/" + Context.Session.GetString("TemplateName") + "/css/" + Context.Session.GetString("DomainFolderUpload") + ".css";
    string linkJs = "/Templates/" + Context.Session.GetString("TemplateName") + "/js/";
    if (Context.Session.GetString("DomainCssName") != null && Context.Session.GetString("DomainCssName") != "")
    {
        linkCss = "/Templates/" + Context.Session.GetString("TemplateName") + "/css/" + Context.Session.GetString("DomainCssName");
    }
    
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <!-- Google font (font-family: 'Dosis', Roboto;) -->
    <link href="https://fonts.googleapis.com/css?family=Dosis:400,500,600,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700" rel="stylesheet">

    <link rel="stylesheet" href="~/lib/fontawesome-free/css/all.min.css" />

    <!-- Stylesheets -->
   
    <link rel="stylesheet" href="@linkCss" />
    <!-- Modernizer js -->
        
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="@(linkJs+"vendor/modernizr-3.5.0.min.js")"></script>

    @await Html.PartialAsync("_PartialSEO", ItemConfig)
    @Html.Raw(ItemCoQuan.DataHeader)
</head>
<body id="wrapper" class="wrapper">

    <div id="fb-root"></div>
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v13.0&appId=923464011013068&autoLogAppEvents=1" nonce="9j5SEdyC"></script>

    <div class="page-home">
        <header id="header" class="jnr__header header--one clearfix">
            <!-- Start Header Top Area -->
			<div class="junior__header__top">
				<div class="container">
					<div class="row">
						<div class="col-md-7 col-lg-6 col-sm-12">
							<div class="jun__header__top__left">
								<ul class="top__address d-flex justify-content-start align-items-center flex-wrap flex-lg-nowrap flex-md-nowrap m-0 p-0">
									<li><i class="fa fa-envelope"></i><a href="mailto:@ItemCoQuan.Email">@ItemCoQuan.Email</a></li>
									<li><i class="fa fa-phone"></i><span>Liên Hệ:</span><a href="tel:@ItemCoQuan.Telephone.Replace(".","").Trim()">@ItemCoQuan.Telephone</a></li>
								</ul>
							</div>
						</div>
						<div class="col-md-5 col-lg-6 col-sm-12">
							<div class="jun__header__top__right">
								<ul class="accounting d-flex justify-content-lg-end justify-content-md-end justify-content-start align-items-center m-0 p-0">
									<li><a class="login-trigger" href="/sitemap.html"><i class="fas fa-sitemap"></i> <span class="d-none d-sm-block float-right ml-2">Sơ đồ cổng</span></a></li>
									<li><a class="accountbox-trigger" href="/rss"><i class="fas fa-rss-square"></i> <span class="d-none d-sm-block float-right ml-2">Rss</span></a></li>
									<li><a class="accountbox-trigger" href="/api"><i class="fas fa-code"></i> <span class="d-none d-sm-block float-right ml-2">Api</span></a></li>
								</ul>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- End Header Top Area -->
            <!-- Start Mainmenu Area -->
            
             <section class="mainmenu__wrapper bg__cat--1 poss-relative header_top_line sticky__header is-sticky">
                <div class="container header">
                    <partial name="Templates/@Context.Session.GetString("TemplateName")/_PartialMenu" />
                </div>
            </section>
            <!-- End Mainmenu Area -->
        </header>
       
       
        <section id="section-slideshow">
            @await Html.PartialAsync("Templates/" + @Context.Session.GetString("TemplateName") + "/_PartialSlideshows", new API.Areas.Admin.Models.Banners.BannersModel() { ListItems = ListBanners })
        </section>

        @await Html.PartialAsync("Templates/" + @Context.Session.GetString("TemplateName") + "/_PartialtWelcome", ItemConfig)

        @RenderBody()

    </div>



    @await Html.PartialAsync("Templates/" + @Context.Session.GetString("TemplateName") + "/_PartialFooter", ItemConfig)
    
     <!-- JS Files -->
    <script src="~/lib/js/bootstrap.min.js"></script>

    <script src="~/lib/js/popper.min.js"></script>
    <script src="~/js/site.js"></script>


    <script src="@(linkJs+"plugins.js")"></script>
    <script src="@(linkJs+"active.js")"></script>
  
    
    <script src="https://sp.zalo.me/plugins/sdk.js"></script>


    <script>        

        function SubmitSearch() {
            $('form#search-top').submit();
        }

    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
